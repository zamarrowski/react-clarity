{"version":3,"sources":["../../src/Dropdown/Dropdown.js"],"names":["Dropdown","styled","div","DropdownContainer","props","show","css","DropdownHeader","h4","DropdownButton","button","disabled","DropdownComponent","state","open","_handleClick","bind","verticalAlign","headerName","actions","map","action","key","_onClickDropdownButton","onClick","name","setState","cb","React","Component"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA,IAAMA,WAAWC,2BAAOC,GAAlB,iBAAN;;AAKA,IAAMC,oBAAoBF,2BAAOC,GAA3B,mBAkBF;AAAA,SAASE,MAAMC,IAAN,QAAcC,qBAAd,mBAAT;AAAA,CAlBE,CAAN;;AAuBA,IAAMC,iBAAiBN,2BAAOO,EAAxB,kBAAN;;AAYA,IAAMC,iBAAiBR,2BAAOS,MAAxB,mBA2BF;AAAA,SAASN,MAAMO,QAAN,QAAkBL,qBAAlB,mBAAT;AAAA,CA3BE,CAAN;;IAoCMM,iB;;;;;;;;;;;;;;4MACJC,K,GAAQ;AACNC,YAAM;AADA,K;;;;;6BAIC;AAAA;;AACP,aACE;AAAC,gBAAD;AAAA;AACE;AAAC,0BAAD;AAAA,YAAQ,SAAS,KAAKC,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAjB,EAA+C,WAA/C;AAAA;AACW,wCAAC,uBAAD,IAAS,UAAS,MAAlB,EAAyB,MAAK,gBAA9B,EAA+C,OAAO,EAACC,eAAe,QAAhB,EAAtD,EAAiF,OAAM,OAAvF;AADX,SADF;AAIE;AAAC,2BAAD;AAAA,YAAmB,MAAM,KAAKJ,KAAL,CAAWC,IAApC;AACG,eAAKV,KAAL,CAAWc,UAAX,GAAwB;AAAC,0BAAD;AAAA;AAAiB,iBAAKd,KAAL,CAAWc;AAA5B,WAAxB,GAAmF,EADtF;AAEG,eAAKd,KAAL,CAAWe,OAAX,IAAsB,KAAKf,KAAL,CAAWe,OAAX,CAAmBC,GAAnB,CAAuB,UAACC,MAAD,EAASC,GAAT;AAAA,mBAC5C;AAAC,4BAAD;AAAA,gBAAgB,SAAS,OAAKC,sBAAL,CAA4BP,IAA5B,SAAuCK,OAAOG,OAAP,IAAkB,IAAzD,CAAzB,EAAyF,UAAUH,OAAOV,QAA1G,EAAoH,KAAKW,GAAzH;AAA+HD,qBAAOI;AAAtI,aAD4C;AAAA,WAAvB;AAFzB;AAJF,OADF;AAaD;;;mCAEc;AACb,WAAKC,QAAL,CAAc,EAAEZ,MAAM,CAAC,KAAKD,KAAL,CAAWC,IAApB,EAAd;AACD;;;2CAEsBa,E,EAAI;AACzB,WAAKD,QAAL,CAAc,EAAEZ,MAAM,CAAC,KAAKD,KAAL,CAAWC,IAApB,EAAd,EAA0C,YAAM;AAC9C,YAAIa,EAAJ,EAAQA;AACT,OAFD;AAGD;;;;EA7B6BC,gBAAMC,S;;kBAgCvBjB,iB","file":"Dropdown.js","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\nimport Button from './../Button/Button'\nimport Ionicon from 'react-ionicons'\n\nconst Dropdown = styled.div`\n  position: relative;\n  display: inline-block;\n`\n\nconst DropdownContainer = styled.div`\n  display: flex;\n  font-family: 'MetropolisRegular';\n  flex-direction: column;\n  position: absolute;\n  top: 100%;\n  left: 0;\n  min-width: 5rem;\n  max-width: 15rem;\n  background: #fff;\n  border: 1px solid #ccc;\n  border-radius: .125rem;\n  box-shadow: 0 1px 0.125rem rgba(115,115,115,.25);\n  margin-top: .083333rem;\n  padding: .5rem 0;\n  z-index: 1000;\n  visibility: hidden;\n\n  ${props => props.show && css`\n    visibility: visible;\n  `};\n`\n\nconst DropdownHeader = styled.h4`\n  font-size: 12px;\n  font-weight: 600;\n  letter-spacing: normal;\n  padding: 0 .5rem;\n  line-height: .75rem;\n  margin: 0;\n  color: #313131;\n  white-space: nowrap;\n  margin-bottom: 5px;\n`\n\nconst DropdownButton = styled.button`\n  font-size: 14px;\n  letter-spacing: normal;\n  font-weight: 400;\n  background: 0 0;\n  border: 0;\n  color: #565656;\n  cursor: pointer;\n  display: block;\n  height: auto;\n  line-height: inherit;\n  margin: 0;\n  width: 100%;\n  text-transform: none;\n  padding: .125rem 1rem;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n  border-radius: 0;\n  white-space: nowrap;\n  \n  &:hover {\n    background-color: #eee;\n    color: #565656;\n    text-decoration: none;\n  };\n\n  ${props => props.disabled && css`\n    cursor: not-allowed;\n    opacity: .4;\n    &:hover {\n      background: 0 0;\n    };\n  `};\n`\n\nclass DropdownComponent extends React.Component {\n  state = {\n    open: false\n  }\n\n  render() {\n    return(\n      <Dropdown>\n        <Button onClick={this._handleClick.bind(this)} solid>\n          DROPDOWN <Ionicon fontSize=\"15px\" icon=\"ios-arrow-down\" style={{verticalAlign: 'middle'}} color=\"white\" />\n        </Button>\n        <DropdownContainer show={this.state.open}>\n          {this.props.headerName ? <DropdownHeader>{this.props.headerName}</DropdownHeader> : ''}\n          {this.props.actions && this.props.actions.map((action, key) => (\n            <DropdownButton onClick={this._onClickDropdownButton.bind(this, action.onClick || null)} disabled={action.disabled} key={key}>{action.name}</DropdownButton>\n          ))}\n        </DropdownContainer>\n      </Dropdown>\n    )\n  }\n\n  _handleClick() {\n    this.setState({ open: !this.state.open })\n  }\n\n  _onClickDropdownButton(cb) {\n    this.setState({ open: !this.state.open }, () => {\n      if (cb) cb()\n    })\n  }\n}\n\nexport default DropdownComponent\n  \n  "]}